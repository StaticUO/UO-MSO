/*%FSM<COMPILE "C:\Programme\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, RUBE_AI_taskPatrol">*/
/*%FSM<HEAD>*/
/*
item0[] = {"init",0,4346,-306.462952,-42.719532,-216.462982,7.280461,0.000000,"init"};
item1[] = {"_",4,218,-168.970108,-30.706617,-145.025208,-5.084061,0.000000,""};
item2[] = {"core_duty_decisi",2,250,-53.744362,17.558327,64.219925,102.272614,0.000000,"core duty decision"};
item3[] = {"alarmed",4,218,252.101288,34.699818,342.101959,84.699814,1.000000,"alarmed"};
item4[] = {"threat___onAlarm",2,250,201.266876,140.393448,392.565399,180.653244,0.000000,"threat / onAlarm"};
item5[] = {"all_clear",4,218,78.515541,135.136169,168.515564,185.136215,1.000000,"all clear"};
item6[] = {"dead",4,218,102.837692,-47.441574,192.837799,2.558346,2.000000,"dead"};
item7[] = {"dead",4,218,429.839172,135.435745,519.839111,185.435867,2.000000,"dead"};
item8[] = {"wiped_out",1,250,430.140930,-46.878906,520.140869,3.121059,0.000000,"wiped out"};
item9[] = {"exit_on_alarm",4,218,381.462067,219.554947,471.462128,269.554993,3.000000,"exit on alarm"};
item10[] = {"abort_patrol",1,250,381.959045,315.925171,471.959167,365.925171,0.000000,"abort patrol"};
item11[] = {"regular_duty",4,218,-189.486526,72.736816,-99.486221,122.736816,0.000000,"regular duty"};
item12[] = {"patrol_decision",2,250,-284.143188,130.951340,-194.142838,180.951340,0.000000,"patrol decision"};
item13[] = {"poi",4,218,-391.178833,194.594116,-301.178894,244.594040,1.000000,"poi"};
item14[] = {"perimeter",4,218,-179.035767,195.558411,-89.035767,245.558395,0.000000,"perimeter"};
item15[] = {"point_of_interest",2,250,-422.036194,272.701294,-270.321472,325.594147,0.000000,"point of interest patrol"};
item16[] = {"periemter_patrol",2,250,-206.035721,271.736938,-63.964272,325.594086,0.000000,"periemter patrol"};
item17[] = {"subtask__advance",2,250,-311.142578,401.214294,-165.214203,456.035706,0.000000,"subtask: advance"};
item18[] = {"resume_duty",4,218,-97.486008,123.519234,-7.486023,173.519470,1.000000,"resume duty"};
item19[] = {"",7,210,-57.217457,424.302307,-49.217461,432.302307,0.000000,""};
item20[] = {"subtask_done",4,218,-288.681732,485.295929,-187.226013,545.796997,1.000000,"subtask done"};
item21[] = {"_",4,218,-148.463959,348.741882,-120.597778,369.108856,0.000000,""};
item22[] = {"_",4,218,-358.805115,351.135864,-331.894836,374.370544,0.000000,""};
item23[] = {"task_done",4,218,-283.133667,654.699463,-193.133789,704.699463,1.000000,"task done"};
item24[] = {"post_subtask_dec",2,250,-299.667419,576.707520,-177.117294,628.680298,0.000000,"post subtask decision"};
item25[] = {"run_completion_c",2,250,-318.152710,726.824219,-158.809814,786.383240,0.000000,"run completion code"};
item26[] = {"subtask_done",4,218,-501.927765,578.588562,-411.927765,628.588562,0.000000,"subtask done"};
item27[] = {"subtask_complete",2,250,-510.330292,895.279419,-404.548431,943.306702,0.000000,"subtask complete"};
item28[] = {"delay_loop",2,250,250.374573,283.757202,340.374634,333.757202,0.000000,"delay loop"};
item29[] = {"delay",4,218,251.330383,202.505295,341.330383,252.505310,0.000000,"delay"};
item30[] = {"_",4,218,184.982849,212.203598,216.672638,237.350067,0.000000,""};
item31[] = {"skip__adv__duty",4,218,-144.129700,897.252563,-54.129753,947.252563,2.000000,"skip " \n "adv. duty"};
item32[] = {"",7,210,1.359192,917.965820,9.359194,925.965820,0.000000,""};
item33[] = {"scriptDone",4,218,-284.193665,808.479309,-194.193695,858.479309,0.000000,"scriptDone"};
item34[] = {"advanced_duty",4,218,-286.166443,987.011780,-196.166412,1037.011963,1.000000,"advanced duty"};
item35[] = {"task_complete",2,250,-297.509583,890.347656,-180.877747,956.128906,0.000000,"task complete"};
item36[] = {"advanced_duty",4,218,-502.673798,1069.866211,-412.673798,1119.864868,1.000000,"advanced duty"};
item37[] = {"continue",4,218,-137.225403,1001.807312,-62.020660,1051.806396,0.000000,"continue"};
item38[] = {"continue",4,218,-623.996277,895.279358,-533.996765,945.280090,0.000000,"continue"};
item39[] = {"run_advanced_dut",2,250,-309.346130,1067.893311,-172.000458,1122.825073,0.000000,"run advanced duty"};
item40[] = {"scriptDone",4,218,-285.673340,1157.652954,-195.673325,1207.652954,0.000000,"scriptDone"};
item41[] = {"",7,210,-582.569275,1246.425293,-574.569275,1254.425293,0.000000,""};
item42[] = {"",7,210,-244.245911,1246.425781,-236.245911,1254.425781,0.000000,""};
item43[] = {"",7,210,1.918210,1245.725708,9.918209,1253.725708,0.000000,""};
item44[] = {"continue",4,218,-440.987549,402.746368,-350.987488,452.746613,0.000000,"continue"};
item45[] = {"delay_loop_1",2,250,-565.968384,403.245483,-475.967987,453.245697,0.000000,"delay loop"};
item46[] = {"delay",4,218,-565.011047,35.222137,-475.012115,85.222176,0.000000,"delay"};
item47[] = {"quitFSM",4,218,17.442245,204.642624,107.442230,254.642593,2.000000,"quitFSM"};
item48[] = {"quit",1,250,16.906502,306.981812,106.906517,356.981812,0.000000,"quit"};
item49[] = {"",7,210,136.508362,224.476074,144.508362,232.476105,0.000000,""};
item50[] = {"player_is_leader",4,218,-105.509598,-81.007042,-15.509586,-31.007034,3.000000,"player is" \n "leader"};
item51[] = {"player_in_charge",2,250,-105.086868,-174.062439,-15.086887,-124.062462,0.000000,"player in" \n "charge"};
item52[] = {"AI_is_leader",4,218,22.759373,-174.062439,112.759308,-124.062462,1.000000,"AI is" \n "leader"};
item53[] = {"",7,210,63.437485,-35.562271,71.437492,-27.562271,0.000000,""};
item54[] = {"_",4,218,-117.677948,-215.709076,-92.569519,-190.890930,0.000000,""};
item55[] = {"delay_loop_2",2,250,-220.342529,-216.677612,-143.901947,-189.922394,0.000000,"delay loop"};
item56[] = {"delay",4,218,-218.405334,-165.345428,-143.901886,-130.841980,0.000000,"delay"};
item57[] = {"",7,210,30.545452,-203.118164,38.545422,-195.118164,0.000000,""};
item58[] = {"",7,210,144.185394,-203.425873,152.185394,-195.425873,0.000000,""};
link0[] = {0,1};
link1[] = {1,2};
link2[] = {2,3};
link3[] = {2,6};
link4[] = {2,11};
link5[] = {2,18};
link6[] = {2,47};
link7[] = {2,50};
link8[] = {3,4};
link9[] = {4,5};
link10[] = {4,7};
link11[] = {4,9};
link12[] = {4,30};
link13[] = {4,49};
link14[] = {5,2};
link15[] = {6,8};
link16[] = {7,8};
link17[] = {9,10};
link18[] = {11,12};
link19[] = {12,13};
link20[] = {12,14};
link21[] = {13,15};
link22[] = {14,16};
link23[] = {15,22};
link24[] = {16,21};
link25[] = {17,20};
link26[] = {17,44};
link27[] = {18,19};
link28[] = {19,17};
link29[] = {20,24};
link30[] = {21,17};
link31[] = {22,17};
link32[] = {23,25};
link33[] = {24,23};
link34[] = {24,26};
link35[] = {25,33};
link36[] = {26,27};
link37[] = {27,36};
link38[] = {27,38};
link39[] = {28,29};
link40[] = {29,4};
link41[] = {30,28};
link42[] = {31,32};
link43[] = {32,2};
link44[] = {33,35};
link45[] = {34,39};
link46[] = {35,31};
link47[] = {35,34};
link48[] = {35,37};
link49[] = {36,39};
link50[] = {37,32};
link51[] = {38,41};
link52[] = {39,40};
link53[] = {40,42};
link54[] = {41,42};
link55[] = {42,43};
link56[] = {43,32};
link57[] = {44,45};
link58[] = {45,46};
link59[] = {46,2};
link60[] = {47,48};
link61[] = {49,47};
link62[] = {50,51};
link63[] = {51,52};
link64[] = {51,54};
link65[] = {51,57};
link66[] = {52,53};
link67[] = {53,2};
link68[] = {54,55};
link69[] = {55,56};
link70[] = {56,51};
link71[] = {57,58};
link72[] = {58,6};
globals[] = {0.000000,0,0,0,0,640,480,1,78,6316128,1,-400.003601,473.612000,331.329834,-310.807068,902,663,1};
window[] = {0,-1,-1,-1,-1,838,1484,3089,44,1,919};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "RUBE_AI_taskPatrol";
  class States
  {
    /*%FSM<STATE "init">*/
    class init
    {
      name = "init";
      init = /*%FSM<STATEINIT""">*/"/*" \n
       "	Description:" \n
       "	  patrol fsm initialized/launched by RUBE_AI_taskPatrol" \n
       "*/" \n
       "" \n
       "private [" \n
       "	""_group"", ""_pointsOfInterest"", ""_perimeter"", ""_poiPatrolChance"",  " \n
       "	""_subtaskDistance"", ""_subtaskDeviance"", ""_onAlarm"", ""_exitOnAlarm"", " \n
       "	""_formationPool"", ""_combatFormationPool"", ""_combatTypePool"", ""_behaviourPool"", " \n
       "	""_speedPool"", ""_advancedDuty"", ""_advancedDutyChance"", ""_t"", ""_delay"", " \n
       "	""_completionRadius"", ""_skipDuty"", ""_codeHandle"", ""_currentJob"", ""_poi"", " \n
       "	""_currentPerimeter"", ""_currentPoiPos"", ""_currentPoiCode""," \n
       "	""_quitFSM"", ""_patrolCenter""" \n
       "];" \n
       "" \n
       "// to be setVariabled from the outside if needed." \n
       "_quitFSM = false;" \n
       "" \n
       "/*" \n
       "	default values" \n
       "*/" \n
       "_group = _this select 0;" \n
       "_pointsOfInterest = []; // array of positions or array of [position, poi-code]" \n
       "_perimeter = [];" \n
       "" \n
       "// chances from 0.0 to 1.0" \n
       "// poi vs. perimeter patrol" \n
       "_poiPatrolChance = 50;" \n
       "" \n
       "// average/mid. subtask distance" \n
       "_subtaskDistance = 300;" \n
       "" \n
       "// max. deviance in degree for subtask steps" \n
       "_subtaskDeviance = 5;" \n
       "" \n
       "_onAlarm = """";" \n
       "_exitOnAlarm = false;" \n
       "" \n
       "_formationPool = [""COLUMN""];" \n
       "_combatFormationPool = [""VEE"", ""LINE""];" \n
       "_combatTypePool = [""HOLD"", ""GUARD""];" \n
       "_behaviourPool = [""SAFE""];" \n
       "_speedPool = [""LIMITED""];" \n
       "" \n
       "// pool of adv. duty code to be spawned" \n
       "_advancedDuty = [];" \n
       "_advancedDutyChance = 0;" \n
       "" \n
       "/*" \n
       "	read parameters" \n
       "*/" \n
       "{" \n
       "	switch (_x select 0) do" \n
       "	{" \n
       "		case ""group"": { _group = _x select 1; };" \n
       "		case ""points"": { _pointsOfInterest = _x select 1; }; " \n
       "		case ""pointsOfInterest"": { _pointsOfInterest = _x select 1; };" \n
       "		case ""perimeter"": { _perimeter = _x select 1; };" \n
       "		case ""patrolCoef"": { _poiPatrolChance = (_x select 1) * 100; };" \n
       "		case ""distance"": { _subtaskDistance = _x select 1; };" \n
       "		case ""deviance"": { _subtaskDeviance = _x select 1; };" \n
       "		case ""onAlarm"": { _onAlarm = _x select 1; };" \n
       "		case ""exitOnAlarm"": { _exitOnAlarm = _x select 1; };" \n
       "		case ""formation"":" \n
       "		{" \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_formationPool = _x select 1;" \n
       "			} else " \n
       "			{" \n
       "				_formationPool = [(_x select 1)];	" \n
       "			}; " \n
       "		 };" \n
       "		case ""combatFormation"":" \n
       "		{" \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_combatFormationPool = _x select 1;" \n
       "			} else " \n
       "			{" \n
       "				_combatFormationPool = [(_x select 1)];	" \n
       "			}; " \n
       "		 };" \n
       "		case ""combatType"":" \n
       "		{" \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_combatTypePool = _x select 1;" \n
       "			} else " \n
       "			{" \n
       "				_combatTypePool = [(_x select 1)];	" \n
       "			}; " \n
       "		 };" \n
       "		case ""behaviour"":" \n
       "		{" \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_behaviourPool = _x select 1;" \n
       "			} else " \n
       "			{" \n
       "				_behaviourPool = [(_x select 1)];	" \n
       "			}; " \n
       "		 };" \n
       "		case ""speed"":" \n
       "		{" \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_speedPool = _x select 1;" \n
       "			} else " \n
       "			{" \n
       "				_speedPool = [(_x select 1)];	" \n
       "			}; " \n
       "		 };" \n
       "		case ""advancedDuty"":" \n
       "		{" \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_advancedDuty = _x select 1;" \n
       "			} else " \n
       "			{" \n
       "				_advancedDuty = [(_x select 1)];	" \n
       "			}; " \n
       "		 };" \n
       "		case ""dutyCoef"": { _advancedDutyChance = (_x select 1) * 100; };" \n
       "	};" \n
       "} forEach _this;" \n
       "" \n
       "" \n
       "/*" \n
       "	initialize" \n
       "*/" \n
       "_t = time;" \n
       "_delay = 4.5 + (random 0.5);" \n
       "_completionRadius = 15;" \n
       "_skipDuty = false;" \n
       "" \n
       "// empty/null handle for poi-code" \n
       "_codeHandle =  0 spawn {};" \n
       " " \n
       "" \n
       "// [poiTask?, subtask position, task position, completionCode]" \n
       "_currentJob = [];" \n
       "" \n
       "// working copy of our points of interest to" \n
       "// randomly pop from" \n
       "_poi = + _pointsOfInterest;" \n
       "" \n
       "// index of current perimeter" \n
       "_currentPerimeter = floor (random (count _perimeter));" \n
       "" \n
       "_currentPoiPos = [];" \n
       "_currentPoiCode = """";" \n
       "" \n
       "_patrolCenter = []; // get's calculated in case the player is suddenly leader" \n
       "" \n
       "/*" \n
       "	private functions" \n
       "*/" \n
       "private [" \n
       "	""_isDead"", ""_isMainTask"", ""_nextPointOfInterest"", ""_nextPerimeter"", " \n
       "	""_nextSubtask"", ""_selectAdvancedDuty"", ""_getParolCenter""" \n
       "];" \n
       "" \n
       "// returns true if the group got wiped out" \n
       "_isDead = {" \n
       "	if (isNull _this) exitwith" \n
       "	{" \n
       "		true" \n
       "	};" \n
       "" \n
       "     ({alive _x} count (units _this) == 0)" \n
       "};" \n
       "" \n
       "// returns true if the last subtask equals the main task" \n
       "_isMainTask = {" \n
       "	((((_currentJob select 1) select 0) == ((_currentJob select 2) select 0)) && " \n
       "	 (((_currentJob select 1) select 1) == ((_currentJob select 2) select 1)))" \n
       "};" \n
       "" \n
       "// sets next random point of interest, refilling" \n
       "// the working pool if needed..." \n
       "_nextPointOfInterest = {" \n
       "	private [""_p""];" \n
       "	if ((count _poi) == 0) then" \n
       "	{" \n
       "		_poi = + _pointsOfInterest;" \n
       "	};" \n
       "	" \n
       "	_p = _poi call RUBE_randomPop;" \n
       "      if ((typeName (_p select 0)) == ""ARRAY"") then" \n
       "	{" \n
       "		_currentPoiPos = _p select 0;" \n
       "		if ((count _p) > 1) then" \n
       "		{" \n
       "			_currentPoiCode = _p select 1;" \n
       "		};" \n
       "	} else" \n
       "	{" \n
       "		_currentPoiPos = _p;" \n
       "		_currentPoiCode = """";" \n
       "	};" \n
       "};" \n
       "" \n
       "// sets _currentPerimeter to the next one" \n
       "_nextPerimeter = {" \n
       "	_currentPerimeter = (_currentPerimeter + 1) % (count _perimeter);" \n
       "	_currentPerimeter" \n
       "};" \n
       "" \n
       "// calculates the next subtasks destination/position" \n
       "// and updates _currentJob" \n
       "_nextSubtask = {" \n
       "	private [""_leader""];" \n
       "	_leader = leader _group;" \n
       "" \n
       "	// distance * 1.5 (max. randomized distance) to not ""overshoot""" \n
       "	if ((_leader distance (_currentJob select 2)) < (_subtaskDistance * 1.5)) then" \n
       "	{" \n
       "		// complete task (no further subtask)" \n
       "		_currentJob set [1, (_currentJob select 2)];" \n
       "	} else" \n
       "	{" \n
       "		// next subtask" \n
       "		private [""_dist"", ""_angle""];" \n
       "		_dist = _subtaskDistance * (0.5 + (random 1.5));" \n
       "		_angle = ([_leader, (_currentJob select 2)] call BIS_fnc_dirTo) - _subtaskDeviance + (random (_subtaskDeviance * 2));" \n
       "		_currentJob set [1, ([_leader, _dist, _angle] call BIS_fnc_relPos)];" \n
       "	};" \n
       "" \n
       "	// update waypoint for next subtask" \n
       "	[" \n
       "		[""group"", _group]," \n
       "		[""position"", (_currentJob select 1)]," \n
       "		[""type"", ""MOVE""]," \n
       "		[""behaviour"", (_behaviourPool call RUBE_randomSelect)]," \n
       "		[""formation"", (_formationPool call RUBE_randomSelect)]," \n
       "		[""speed"", (_speedPool call RUBE_randomSelect)]" \n
       "	] call RUBE_updateWaypoint;" \n
       "};" \n
       "" \n
       "// select most appropriate advanced duty" \n
       "_selectAdvancedDuty = {" \n
       "	private [""_index"", ""_rating"", ""_i"", ""_r""];" \n
       "	_index = 0;" \n
       "	_rating = -1;" \n
       "	" \n
       "	for ""_i"" from 0 to ((count _advancedDuty) - 1) do" \n
       "	{" \n
       "		_r = _group call ((_advancedDuty select _i) select 0);" \n
       "		if (_r > _rating) then" \n
       "		{" \n
       "			_rating = _r;" \n
       "			_index = _i;" \n
       "		};" \n
       "	};" \n
       "" \n
       "	// skip adv. duty then..." \n
       "	if (_rating <= 0) exitWith" \n
       "	{" \n
       "		{}" \n
       "	};" \n
       "" \n
       "	((_advancedDuty select _index) select 1)" \n
       "};" \n
       "" \n
       "// calculates and returns the partol cetner (position)" \n
       "_getParolCenter = {" \n
       "	private [""_positions""];" \n
       "" \n
       "	_positions = +_perimeter;" \n
       "" \n
       "	{" \n
       "		switch ((typeName (_x select 0))) do" \n
       "		{" \n
       "			case ""ARRAY"":" \n
       "			{" \n
       "				_positions set [(count _positions), (_x select 0)];		" \n
       "			};" \n
       "			case ""SCALAR"":" \n
       "			{" \n
       "				_positions set [(count _positions), _x];		" \n
       "			};" \n
       "		};" \n
       "	} forEach _pointsOfInterest;" \n
       "" \n
       "	(_positions call RUBE_averagePosition)" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="core_duty_decisi";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "core_duty_decisi">*/
    class core_duty_decisi
    {
      name = "core_duty_decisi";
      init = /*%FSM<STATEINIT""">*/"_skipDuty = false;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "player_is_leader">*/
        class player_is_leader
        {
          priority = 3.000000;
          to="player_in_charge";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"((leader _group) == player)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="wiped_out";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_group call _isDead)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "quitFSM">*/
        class quitFSM
        {
          priority = 2.000000;
          to="quit";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_quitFSM"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "resume_duty">*/
        class resume_duty
        {
          priority = 1.000000;
          to="subtask__advance";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"((count _currentJob) > 0)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "alarmed">*/
        class alarmed
        {
          priority = 1.000000;
          to="threat___onAlarm";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(waypointBehaviour  [_group, (currentWaypoint _group)]) in [""COMBAT"", ""STEALTH""]"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"// update waypoint" \n
           "[" \n
           "	[""group"", _group]," \n
           "	[""formation"", (_formationPool call RUBE_randomSelect)]" \n
           "] call RUBE_updateWaypoint;" \n
           "" \n
           "if ((typeName _onAlarm) == ""CODE"") then" \n
           "{" \n
           "	_group call _onAlarm;" \n
           "};"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "regular_duty">*/
        class regular_duty
        {
          priority = 0.000000;
          to="patrol_decision";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "threat___onAlarm">*/
    class threat___onAlarm
    {
      name = "threat___onAlarm";
      init = /*%FSM<STATEINIT""">*/"// update time" \n
       "_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "exit_on_alarm">*/
        class exit_on_alarm
        {
          priority = 3.000000;
          to="abort_patrol";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_exitOnAlarm"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="wiped_out";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_group call _isDead)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "quitFSM">*/
        class quitFSM
        {
          priority = 2.000000;
          to="quit";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_quitFSM"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "all_clear">*/
        class all_clear
        {
          priority = 1.000000;
          to="core_duty_decisi";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!((waypointBehaviour  [_group, (currentWaypoint _group)]) in [""COMBAT"", ""STEALTH""])"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="delay_loop";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "wiped_out">*/
    class wiped_out
    {
      name = "wiped_out";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "abort_patrol">*/
    class abort_patrol
    {
      name = "abort_patrol";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "patrol_decision">*/
    class patrol_decision
    {
      name = "patrol_decision";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "poi">*/
        class poi
        {
          priority = 1.000000;
          to="point_of_interest";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_poiPatrolChance call RUBE_chance)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "perimeter">*/
        class perimeter
        {
          priority = 0.000000;
          to="periemter_patrol";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "point_of_interest">*/
    class point_of_interest
    {
      name = "point_of_interest";
      init = /*%FSM<STATEINIT""">*/"[] call _nextPointOfInterest;" \n
       "" \n
       "_currentJob = [true, [], _currentPoiPos, _currentPoiCode];"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="subtask__advance";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "periemter_patrol">*/
    class periemter_patrol
    {
      name = "periemter_patrol";
      init = /*%FSM<STATEINIT""">*/"[] call _nextPerimeter;" \n
       "" \n
       "_currentJob = [false, [], (_perimeter select _currentPerimeter)];"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="subtask__advance";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "subtask__advance">*/
    class subtask__advance
    {
      name = "subtask__advance";
      init = /*%FSM<STATEINIT""">*/"// new subtask" \n
       "if ((count (_currentJob select 1)) == 0) then" \n
       "{" \n
       "	// calculate next subtask and update waypoint" \n
       "	[] call _nextSubtask;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "subtask_done">*/
        class subtask_done
        {
          priority = 1.000000;
          to="post_subtask_dec";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(unitReady (leader _group)) && (alive (leader _group))"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "continue">*/
        class continue
        {
          priority = 0.000000;
          to="delay_loop_1";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "post_subtask_dec">*/
    class post_subtask_dec
    {
      name = "post_subtask_dec";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "task_done">*/
        class task_done
        {
          priority = 1.000000;
          to="run_completion_c";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"([] call _isMainTask)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "subtask_done">*/
        class subtask_done
        {
          priority = 0.000000;
          to="subtask_complete";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "run_completion_c">*/
    class run_completion_c
    {
      name = "run_completion_c";
      init = /*%FSM<STATEINIT""">*/"// execute completion code if given" \n
       "// (can only occur for poi subtasks)" \n
       "if ((typeName (_currentJob select 3)) == ""CODE"") then" \n
       "{" \n
       "	_codeHandle = _group spawn (_currentJob select 3);	" \n
       "	// skip advanced duty" \n
       "	_skipDuty = true;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "scriptDone">*/
        class scriptDone
        {
          priority = 0.000000;
          to="task_complete";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"scriptDone _codeHandle"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "subtask_complete">*/
    class subtask_complete
    {
      name = "subtask_complete";
      init = /*%FSM<STATEINIT""">*/"// clear current subtask" \n
       "_currentJob set [1, []];"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "advanced_duty">*/
        class advanced_duty
        {
          priority = 1.000000;
          to="run_advanced_dut";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_advancedDutyChance call RUBE_chance)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "continue">*/
        class continue
        {
          priority = 0.000000;
          to="core_duty_decisi";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "delay_loop">*/
    class delay_loop
    {
      name = "delay_loop";
      init = /*%FSM<STATEINIT""">*/"// update time" \n
       "_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "delay">*/
        class delay
        {
          priority = 0.000000;
          to="threat___onAlarm";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t) > _delay"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "task_complete">*/
    class task_complete
    {
      name = "task_complete";
      init = /*%FSM<STATEINIT""">*/"// clear current job" \n
       "_currentJob = [];"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "skip__adv__duty">*/
        class skip__adv__duty
        {
          priority = 2.000000;
          to="core_duty_decisi";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_skipDuty"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "advanced_duty">*/
        class advanced_duty
        {
          priority = 1.000000;
          to="run_advanced_dut";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_advancedDutyChance call RUBE_chance)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "continue">*/
        class continue
        {
          priority = 0.000000;
          to="core_duty_decisi";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "run_advanced_dut">*/
    class run_advanced_dut
    {
      name = "run_advanced_dut";
      init = /*%FSM<STATEINIT""">*/"if ((count _advancedDuty) > 0) then" \n
       "{" \n
       "	_codeHandle = _group spawn ([] call _selectAdvancedDuty);" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "scriptDone">*/
        class scriptDone
        {
          priority = 0.000000;
          to="core_duty_decisi";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"scriptDone _codeHandle"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "delay_loop_1">*/
    class delay_loop_1
    {
      name = "delay_loop_1";
      init = /*%FSM<STATEINIT""">*/"// update time" \n
       "_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "delay">*/
        class delay
        {
          priority = 0.000000;
          to="core_duty_decisi";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t) > _delay"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "quit">*/
    class quit
    {
      name = "quit";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "player_in_charge">*/
    class player_in_charge
    {
      name = "player_in_charge";
      init = /*%FSM<STATEINIT""">*/"// calculate patrol center (only once)" \n
       "if ((count _patrolCenter) == 0) then" \n
       "{" \n
       "	_patrolCenter = [] call _getParolCenter;" \n
       "};" \n
       "" \n
       "[" \n
       "	[""group"", _group]," \n
       "	[""type"", ""GUARD""]," \n
       "	[""position"", _patrolCenter]" \n
       "] call RUBE_updateWaypoint;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="wiped_out";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_group call _isDead)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "AI_is_leader">*/
        class AI_is_leader
        {
          priority = 1.000000;
          to="core_duty_decisi";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"((leader _group) != player)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="delay_loop_2";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "delay_loop_2">*/
    class delay_loop_2
    {
      name = "delay_loop_2";
      init = /*%FSM<STATEINIT""">*/"// update time" \n
       "_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "delay">*/
        class delay
        {
          priority = 0.000000;
          to="player_in_charge";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t) > _delay"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
  };
  initState="init";
  finalStates[] =
  {
    "wiped_out",
    "abort_patrol",
    "quit",
  };
};
/*%FSM</COMPILE>*/