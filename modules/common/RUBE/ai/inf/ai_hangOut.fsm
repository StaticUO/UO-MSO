/*%FSM<COMPILE "C:\Programme\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, RUBE_AI_hangOut">*/
/*%FSM<HEAD>*/
/*
item0[] = {"init",0,4346,-49.317734,-136.545898,40.682259,-86.545906,0.000000,"init"};
item1[] = {"_",4,218,-17.881353,-53.813545,8.559323,-30.932192,0.000000,""};
item2[] = {"hang_out_decisio",2,250,-50.084751,118.220337,39.915260,168.220337,0.000000,"hang out" \n "decision"};
item3[] = {"alarm",4,218,67.711853,118.220337,157.711700,168.220352,1.000000,"alarm"};
item4[] = {"dead",4,218,63.474579,264.830536,153.474548,314.830597,2.000000,"dead"};
item5[] = {"sun___",4,218,-208.559326,118.220337,-118.559334,168.220337,1.000000,"sun..."};
item6[] = {"alarmed",2,250,192.288132,118.220329,282.288147,168.220322,0.000000,"alarmed"};
item7[] = {"dead",1,250,192.288086,265.677948,282.288025,315.677948,0.000000,"dead"};
item8[] = {"all_clear",4,218,82.966095,0.423727,172.966110,50.423729,1.000000,"all clear"};
item9[] = {"_",4,218,315.515503,101.358757,344.498566,124.240143,0.000000,""};
item10[] = {"delay_loop",2,250,296.854523,59.610237,364.854523,83.026886,0.000000,"delay loop"};
item11[] = {"delay",4,218,206.107346,52.586147,265.857422,90.669464,0.000000,"delay"};
item12[] = {"exit_on_alarm",4,218,336.355896,118.220337,426.355896,168.220337,2.000000,"exit on alarm"};
item13[] = {"duty_calls",1,250,336.355896,190.254211,426.355957,240.254211,0.000000,"duty calls"};
item14[] = {"dead",4,218,193.135574,190.254272,283.135590,240.254196,1.000000,"dead"};
item15[] = {"relax",2,250,-50.084740,0.423726,39.915268,50.423706,0.000000,"relax"};
item16[] = {"_",4,218,-19.783909,67.511307,9.475977,92.295212,0.000000,""};
item17[] = {"____fun____nothing",2,250,-207.711884,195.338974,-117.711868,245.338974,0.000000,"...fun & " \n "nothing to do!"};
item18[] = {"_",4,218,-19.576290,208.898315,8.559277,233.474594,0.000000,""};
item19[] = {"_",4,218,-47.919243,61.673698,-22.085905,87.840363,0.000000,""};
item20[] = {"delay_loop_1",2,250,-132.252487,62.590355,-65.169205,86.923676,0.000000,"delay loop"};
item21[] = {"delay",4,218,-131.335907,100.173691,-66.085915,139.173691,0.000000,"delay"};
link0[] = {0,1};
link1[] = {1,15};
link2[] = {2,3};
link3[] = {2,4};
link4[] = {2,5};
link5[] = {2,19};
link6[] = {3,6};
link7[] = {4,7};
link8[] = {5,17};
link9[] = {6,8};
link10[] = {6,9};
link11[] = {6,12};
link12[] = {6,14};
link13[] = {8,15};
link14[] = {9,10};
link15[] = {10,11};
link16[] = {11,6};
link17[] = {12,13};
link18[] = {14,7};
link19[] = {15,16};
link20[] = {16,2};
link21[] = {17,18};
link22[] = {18,2};
link23[] = {19,20};
link24[] = {20,21};
link25[] = {21,2};
globals[] = {0.000000,0,0,0,0,640,480,1,23,6316128,1,-260.083588,399.916351,418.754242,-217.412247,733,831,1};
window[] = {0,-1,-1,-1,-1,1006,1484,2833,44,1,750};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "RUBE_AI_hangOut";
  class States
  {
    /*%FSM<STATE "init">*/
    class init
    {
      name = "init";
      init = /*%FSM<STATEINIT""">*/"/*" \n
       "	Description:" \n
       "	 infantery (or at least disembarked) group fsm to relax/hang out" \n
       "	until their behaviour got set to AWARE or higher." \n
       "*/" \n
       "" \n
       "private [" \n
       "	""_group"", ""_position"", ""_radius"", ""_onAlarm"", ""_exitOnAlarm"", ""_moves"", ""_stopMoves""" \n
       "];" \n
       "" \n
       "_group = grpNull;" \n
       "_position = [];" \n
       "_radius = -1;" \n
       "_onAlarm = """";" \n
       "_exitOnAlarm = true;" \n
       "" \n
       "_moves = [" \n
       "	// talking" \n
       "	""AidlPercSlowWrflDnon_talkCalm""," \n
       "	""AidlPercSlowWrflDnon_talkListening""," \n
       "	""ActsPercMstpSnonWnonDnon_talking01a""," \n
       "	// training, push ups, ..." \n
       "	""AmovPercMstpSnonWnonDnon_idle56kliky"", " \n
       "	""AmovPercMstpSnonWnonDnon_idle69drepy"", " \n
       "	""AmovPercMstpSnonWnonDnon_idle72lehSedy""," \n
       "	// sleeping" \n
       "	""AidlPpneMstpSnonWnonDnon_SleepC_sleep""" \n
       "];" \n
       "" \n
       "// short animations that work with playMoveNow to interrupt longer moves" \n
       "// so they'll ready up in reasonable time" \n
       "_stopMoves = [" \n
       "	""AmovPercMstpSlowWrflDnon""" \n
       "];" \n
       "" \n
       "/*" \n
       "	read parameters" \n
       "*/" \n
       "{" \n
       "	switch (_x select 0) do" \n
       "	{" \n
       "		case ""group"": { _group = _x select 1; };" \n
       "		case ""position"": { _position = _x select 1; };" \n
       "		case ""radius"": { _radius = _x select 1; };" \n
       "		case ""onAlarm"": { _onAlarm = _x select 1; };" \n
       "		case ""exitOnAlarm"": { _exitOnAlarm = _x select 1; };" \n
       "	};" \n
       "} forEach _this;" \n
       "" \n
       "// take leaders position as center if non is given" \n
       "if ((count _position) == 0) then" \n
       "{" \n
       "	_position = position (leader _group);" \n
       "};" \n
       "" \n
       "// radius based on group size if not explicitly set" \n
       "if (_radius < 0) then" \n
       "{" \n
       "	_radius = 2 + ((count (units _group)) * (1 + (random 0.3)));" \n
       "};" \n
       "" \n
       "" \n
       "/*" \n
       "	initialize" \n
       "*/" \n
       "private [" \n
       "	""_t"", ""_t1"", ""_delay"", ""_hasNVGoggles"", ""_actCoef"", ""_units"", ""_cooldown""," \n
       "	""_benches"", ""_freeBenches""" \n
       "];" \n
       "" \n
       "_t = time;" \n
       "_t1 = time;" \n
       "_delay = 4.5 + (random 0.5);" \n
       "_hasNVGoggles = [];" \n
       "_actCoef = 1.0;" \n
       "_units = [];" \n
       "_cooldown = 0;" \n
       "" \n
       "_benches = nearestObjects [_position, [""Park_bench1"", ""FoldChair""], (_radius * 3)];" \n
       "_freeBenches = [];" \n
       "" \n
       "" \n
       "/*" \n
       "	some private functions" \n
       "*/" \n
       "" \n
       "private [" \n
       "	""_isDead"", ""_randomActivity"", ""_getFriendlyPos"", ""_enableUnits"", ""_initRelaxPositions""" \n
       "];" \n
       "" \n
       "// returns true if the group got wiped out" \n
       "_isDead = {" \n
       "	if (isNull _this) exitwith" \n
       "	{" \n
       "		true" \n
       "	};" \n
       "" \n
       "	 ({alive _x} count (units _this) == 0)" \n
       "};" \n
       "" \n
       "// random activity for the given units" \n
       "_randomActivity = {" \n
       "	private [""_r"", ""_p"", ""_obj""];" \n
       "" \n
       "	// re-enable AI" \n
       "	_this call _enableUnits;" \n
       "" \n
       "	// stop units" \n
       "	doStop _this;" \n
       "" \n
       "	{" \n
       "		_r = floor (random 100);" \n
       "		// always try to get the next buddy and watch him.." \n
       "		_p = (_x call _getFriendlyPos);" \n
       "" \n
       "		// stop using .. whatever..." \n
       "		if ([_x, ""RUBE_isUsing""] call RUBE_isTrue) then" \n
       "		{" \n
       "			_obj = _x getVariable ""RUBE_isUsing"";" \n
       "			_obj setVariable [""RUBE_inUse"", false, true];" \n
       "		};" \n
       "" \n
       "		switch (true) do" \n
       "		{" \n
       "			// high chance to sit on a bench (if one is free)" \n
       "			case (((_r%2) == 0) && ((count _freeBenches) > 0)):" \n
       "			{" \n
       "				_obj = _freeBenches call RUBE_randomPop;" \n
       "				_obj setVariable [""RUBE_inUse"", true, true];" \n
       "				_x setVariable [""RUBE_isUsing"", _obj, true];" \n
       "				[_x, _obj] execFSM ""modules\common\RUBE\ai\doSitOnObject.fsm"";" \n
       "			};" \n
       "" \n
       "			// walk to some buddy" \n
       "			case ((_r%6) == 0):" \n
       "			{" \n
       "				_x forceSpeed 2.0;" \n
       "				_x doMove _p;" \n
       "			};" \n
       "" \n
       "			// playMove" \n
       "			// (it's kind of impossible to immediately abort playMoves... so screw this for now)" \n
       "			/*" \n
       "			case ((_r%5) == 0):" \n
       "			{" \n
       "				_x playMoveNow (_moves call RUBE_randomSelect);" \n
       "			};" \n
       "			*/" \n
       "" \n
       "			// crouch" \n
       "			case ((_r%4) == 0):" \n
       "			{" \n
       "				_x forceSpeed 2.0;" \n
       "				[_x, _p, {" \n
       "					_this setUnitPos ""Middle"";" \n
       "				}] execFSM ""modules\common\RUBE\ai\doMoveStop.fsm"";" \n
       "			};" \n
       "" \n
       "			// sit as default" \n
       "			default" \n
       "			{" \n
       "				_x forceSpeed 2.0;" \n
       "				[_x, _p, {" \n
       "					_this action [""SitDown"", _this];" \n
       "					_this disableAI ""ANIM"";" \n
       "				}] execFSM ""modules\common\RUBE\ai\doMoveStop.fsm"";" \n
       "			};" \n
       "		};" \n
       "	} forEach _this;" \n
       "};" \n
       "" \n
       "// tries to return a position from a nearby friendly" \n
       "_getFriendlyPos = {" \n
       "	private [""_men"", ""_man""];" \n
       "" \n
       "	_men = nearestObjects [_this, [""man""], (_radius * (1 + (random 0.5)))];" \n
       "" \n
       "	if ((count _men) > 0) exitWith" \n
       "	{" \n
       "		_man = _men call RUBE_randomSelect;" \n
       "		_this doWatch _man;" \n
       "		(position _man)" \n
       "	};" \n
       "" \n
       "	// random position otherwise..." \n
       "	([_position, [2, 2], [_radius, _radius]] call RUBE_randomizePos)" \n
       "};" \n
       "" \n
       "// re-enables AI" \n
       "_enableUnits = {" \n
       "	{" \n
       "		_x playMoveNow (_stopMoves call RUBE_randomSelect);" \n
       "		_x switchMove """";" \n
       "" \n
       "		_x setUnitPos ""AUTO"";" \n
       "		_x forceSpeed -1;" \n
       "		_x doWatch objNull;" \n
       "		_x enableAI ""MOVE"";" \n
       "		_x enableAI ""ANIM"";" \n
       "		_x enableAI ""AUTOTARGET"";" \n
       "	} forEach _this;" \n
       "};" \n
       "" \n
       "_initRelaxPositions = {" \n
       "	private [""_n"", ""_step"", ""_offset"", ""_dist"", ""_i""];" \n
       "	_n = count _this;" \n
       "" \n
       "	if (_n == 0) exitWith {};" \n
       "" \n
       "	_step = 360 / _n;" \n
       "	_offset = random 360;" \n
       "	_dist = (_radius * 0.67);" \n
       "" \n
       "	for ""_i"" from 0 to (_n - 1) do" \n
       "	{" \n
       "		_p = [" \n
       "			((_position select 0) + ((cos (_offset + (_i * _step))) * _dist))," \n
       "			((_position select 1) + ((sin (_offset + (_i * _step))) * _dist))," \n
       "			0" \n
       "		];" \n
       "		(_this select _i) doMove _p;" \n
       "		(_this select _i) doWatch _position;" \n
       "	};" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="relax";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "hang_out_decisio">*/
    class hang_out_decisio
    {
      name = "hang_out_decisio";
      init = /*%FSM<STATEINIT""">*/"// update time" \n
       "_t = time;" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="dead";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_group call _isDead)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "sun___">*/
        class sun___
        {
          priority = 1.000000;
          to="____fun____nothing";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t1) > _cooldown"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "alarm">*/
        class alarm
        {
          priority = 1.000000;
          to="alarmed";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(waypointBehaviour  [_group, (currentWaypoint _group)]) in [""COMBAT"", ""STEALTH"", ""AWARE""]"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"// put on NVGoggles again" \n
           "if ((count _hasNVGoggles) > 0) then" \n
           "{" \n
           "	{" \n
           "		_x addWeapon ""NVGoggles"";" \n
           "	} forEach _hasNVGoggles;" \n
           "	_hasNVGoggles = [];" \n
           "};" \n
           "" \n
           "// re-enable AI" \n
           "(units _group) call _enableUnits;" \n
           "" \n
           "// follow one" \n
           "(units _group) doFollow (leader _group);" \n
           "" \n
           "// update waypoint" \n
           "[" \n
           "	[""group"", _group]," \n
           "	[""speed"", ""FULL""]," \n
           "	[""behaviour"", ""AWARE""]" \n
           "] call RUBE_updateWaypoint;" \n
           "" \n
           "// run onAlarm" \n
           "if ((typeName _onAlarm) == ""CODE"") then" \n
           "{" \n
           "	_group call _onAlarm;" \n
           "};"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="delay_loop_1";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "alarmed">*/
    class alarmed
    {
      name = "alarmed";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "exit_on_alarm">*/
        class exit_on_alarm
        {
          priority = 2.000000;
          to="duty_calls";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_exitOnAlarm"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 1.000000;
          to="dead";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_group call _isDead)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "all_clear">*/
        class all_clear
        {
          priority = 1.000000;
          to="relax";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!((waypointBehaviour  [_group, (currentWaypoint _group)]) in [""COMBAT"", ""STEALTH""])"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="delay_loop";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "dead">*/
    class dead
    {
      name = "dead";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "delay_loop">*/
    class delay_loop
    {
      name = "delay_loop";
      init = /*%FSM<STATEINIT""">*/"// update time" \n
       "_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "delay">*/
        class delay
        {
          priority = 0.000000;
          to="alarmed";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t) > _delay"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "duty_calls">*/
    class duty_calls
    {
      name = "duty_calls";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "relax">*/
    class relax
    {
      name = "relax";
      init = /*%FSM<STATEINIT""">*/"// tmp. remove NVGoggles" \n
       "{" \n
       "	if (_x hasWeapon ""NVGoggles"") then" \n
       "	{" \n
       "		_x removeWeapon ""NVGoggles"";" \n
       "		_hasNVGoggles set [(count _hasNVGoggles), _x];" \n
       "	};" \n
       "	_x forceSpeed 2.0;" \n
       "} forEach (units _group);" \n
       "" \n
       "[" \n
       "	[""group"", _group]," \n
       "	[""type"", ""MOVE""]," \n
       "	[""formation"", ([""FILE"", ""DIAMOND""] call RUBE_randomSelect)]," \n
       "	[""speed"", ""LIMITED""]," \n
       "	[""behaviour"", ""CARELESS""]" \n
       "] call RUBE_updateWaypoint;" \n
       "" \n
       "(units _group) call _initRelaxPositions;" \n
       "" \n
       "// initial activity coef == all" \n
       "_actCoef = 1.0;" \n
       "" \n
       "// update time" \n
       "_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="hang_out_decisio";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t) > _delay"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_t1 = time;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "____fun____nothing">*/
    class ____fun____nothing
    {
      name = "____fun____nothing";
      init = /*%FSM<STATEINIT""">*/"_units = units _group;" \n
       "" \n
       "if (_actCoef < 1.0) then" \n
       "{" \n
       "	_units = [_units, _actCoef] call RUBE_randomSubSet;" \n
       "};" \n
       "" \n
       "" \n
       "// retrieve free benches" \n
       "_freeBenches = [];" \n
       "{" \n
       "	if (!([_x, ""RUBE_inUse""] call RUBE_isTrue)) then" \n
       "	{" \n
       "		_freeBenches set [(count _freeBenches), _x];" \n
       "	};" \n
       "} forEach _benches;" \n
       "" \n
       "//diag_log format[""Benches: %1/%2 (%3)"", ((count _benches) - (count _freeBenches)), (count _benches), time];" \n
       "" \n
       "" \n
       "// run new activity" \n
       "_units call _randomActivity;" \n
       "" \n
       "// update cooldown time" \n
       "_cooldown = (10 + (random 50));" \n
       "" \n
       "// update proportion of the group that" \n
       "// will change activity on the next run" \n
       "_actCoef = (0.1 + (random 0.35));"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="hang_out_decisio";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_t1 = time;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "delay_loop_1">*/
    class delay_loop_1
    {
      name = "delay_loop_1";
      init = /*%FSM<STATEINIT""">*/"// update time" \n
       "_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "delay">*/
        class delay
        {
          priority = 0.000000;
          to="hang_out_decisio";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t) > _delay"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
  };
  initState="init";
  finalStates[] =
  {
    "dead",
    "duty_calls",
  };
};
/*%FSM</COMPILE>*/