/*%FSM<COMPILE "C:\Programme\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, RUBE_AI_INF_surrenderMoveTo">*/
/*%FSM<HEAD>*/
/*
item0[] = {"init",0,250,-39.148243,-122.139137,50.851753,-72.139137,0.000000,"init"};
item1[] = {"_",4,218,-5.725883,-51.115105,18.403009,-31.902687,0.000000,""};
item2[] = {"what_now_",2,250,-37.945450,-4.575729,52.054565,45.424255,0.000000,"what now?"};
item3[] = {"dead",4,218,84.488907,-4.575724,174.488907,45.424286,2.000000,"dead"};
item4[] = {"dead",1,250,202.627319,-4.575720,292.627441,45.424278,0.000000,"dead"};
item5[] = {"arrived",4,218,68.021111,62.727364,158.021103,112.727364,1.000000,"arrived"};
item6[] = {"complete",1,250,67.305145,140.054321,157.305191,190.054321,0.000000,"complete"};
item7[] = {"move",4,218,-37.945473,82.398567,52.054527,132.398544,0.000000,"move"};
item8[] = {"dirTo_next",2,250,-156.799911,81.682571,-66.799835,131.682541,0.000000,"dirTo" \n "next"};
item9[] = {"complete",4,218,-157.515823,-4.952284,-67.515816,45.047741,1.000000,"complete"};
item10[] = {"good_dir_or_dela",4,218,-281.276672,172.362335,-191.276871,222.362350,0.000000,"good dir" \n "or delay"};
item11[] = {"moving",2,250,-279.616089,-52.181313,-189.616211,-2.181327,0.000000,"moving"};
item12[] = {"dead",4,218,-280.332062,-128.792252,-190.332153,-78.792267,2.000000,"dead"};
item13[] = {"dead",4,218,-41.455635,190.513107,48.544334,240.513046,2.000000,"dead"};
item14[] = {"",7,210,-239.749374,-172.494019,-231.749374,-164.494019,0.000000,""};
item15[] = {"",7,210,243.732605,-173.689636,251.732605,-165.689636,0.000000,""};
item16[] = {"",7,210,243.543762,211.992874,251.543762,219.992874,0.000000,""};
item17[] = {"stuck",4,218,-156.471527,225.876480,-66.471634,275.876465,1.000000,"stuck"};
item18[] = {"regular_doMove",2,250,-157.187469,319.671570,-67.187561,369.671570,0.000000,"regular doMove"};
item19[] = {"unitReady",4,218,-157.187408,393.418579,-67.187592,443.418579,0.000000,"unitReady"};
item20[] = {"complete_1",1,250,-33.321304,392.702576,56.678719,442.702576,0.000000,"complete"};
item21[] = {"cooldown",4,218,-403.307495,-129.490952,-313.307495,-79.490967,0.000000,"cooldown"};
item22[] = {"adjust_direction",2,250,-403.535278,-45.425911,-313.535278,4.574074,0.000000,"adjust" \n "direction"};
item23[] = {"_",4,218,-373.916870,46.651264,-341.981415,70.127960,0.000000,""};
item24[] = {"moveTo_next",2,250,-280.931396,80.056694,-190.931351,130.056702,0.000000,"moveTo" \n "next"};
item25[] = {"_",4,218,-250.704880,29.049335,-219.268906,54.490227,0.000000,""};
link0[] = {0,1};
link1[] = {1,2};
link2[] = {2,3};
link3[] = {2,5};
link4[] = {2,7};
link5[] = {3,4};
link6[] = {5,6};
link7[] = {7,8};
link8[] = {8,10};
link9[] = {8,13};
link10[] = {8,17};
link11[] = {9,2};
link12[] = {10,24};
link13[] = {11,9};
link14[] = {11,12};
link15[] = {11,21};
link16[] = {12,14};
link17[] = {13,16};
link18[] = {14,15};
link19[] = {15,4};
link20[] = {16,4};
link21[] = {17,18};
link22[] = {18,13};
link23[] = {18,19};
link24[] = {19,20};
link25[] = {21,22};
link26[] = {22,23};
link27[] = {23,11};
link28[] = {24,25};
link29[] = {25,11};
globals[] = {0.000000,0,0,0,0,640,480,1,30,6316128,1,-435.190918,276.361877,436.887390,-142.896210,837,682,1};
window[] = {0,-1,-1,-32000,-32000,837,2,1432,24,1,854};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "RUBE_AI_INF_surrenderMoveTo";
  class States
  {
    /*%FSM<STATE "init">*/
    class init
    {
      name = "init";
      init = /*%FSM<STATEINIT""">*/"/*" \n
       "	Description:" \n
       "	 moveTo in surrender/captive anim." \n
       "" \n
       "	 Needs to be called with doFSM or commandFSM!" \n
       "*/" \n
       "" \n
       "private [" \n
       "	""_unit"", ""_position""," \n
       "	""_surrenderMoveToAnims"", ""_avgStepDistance"", ""_sampleRange"", " \n
       "	""_deviance"", ""_completeDistance""" \n
       "];" \n
       "" \n
       "_unit = _target;" \n
       "_position = _destination;" \n
       "" \n
       "_surrenderMoveToAnims = [" \n
       "	//""AmovPercMrunSsurWnonDf_forgoten"", // looks so weird, too slow!" \n
       "	""AmovPercMwlkSsurWnonDf_forgoten""" \n
       "];" \n
       "_avgStepDistance = 5;" \n
       "_sampleRange = _avgStepDistance * 0.75;" \n
       "_deviance = 7;" \n
       "_completeDistance = 1.0;" \n
       "" \n
       "" \n
       "" \n
       "" \n
       "// init" \n
       "private [" \n
       "	""_t"", ""_delay"", ""_adjustDirCooldown""," \n
       "	""_pos"", ""_dir"", ""_isGoing"", ""_trialDir""" \n
       "];" \n
       "" \n
       "_t = time;" \n
       "_delay = 4 + (random 1.0);" \n
       "_adjustDirCooldown = 2;" \n
       "" \n
       "_pos = [0,0,0];" \n
       "_dir = 0;" \n
       "_isGoing = false;" \n
       "" \n
       "_trialDir = 1;" \n
       "" \n
       "// make sure our complete/distance check doesn't fail" \n
       "_position set [2, 0];" \n
       "" \n
       "" \n
       "" \n
       "" \n
       "" \n
       "" \n
       "// private functions" \n
       "private [" \n
       "	""_getNextPos"", ""_adjustDirection"", ""_convexity""" \n
       "];" \n
       "" \n
       "" \n
       "// void => position" \n
       "_getNextPos = {" \n
       "	private [""_pos"", ""_next"", ""_p"", ""_dir"", ""_dist"", ""_d"", ""_i"", ""_obj"", ""_c""];" \n
       "	_pos = position _unit;" \n
       "	_next = [];" \n
       "	" \n
       "	// close enough => last step now" \n
       "	if ((_pos distance _position) < (_avgStepDistance * 1.5)) exitWith" \n
       "	{" \n
       "		_position" \n
       "	};" \n
       "" \n
       "	_dir = [_pos, _position] call BIS_fnc_dirTo;" \n
       "" \n
       "	for ""_i"" from 0 to 360 step 10 do" \n
       "	{" \n
       "		_dist = _avgStepDistance * (0.75 + (random 0.5));		" \n
       "	" \n
       "		_d = _dir - _deviance + ((random 2.0) * _deviance) + (_trialDir * _i);" \n
       "		_p =  [_pos, _dist, _d] call BIS_fnc_relPos;" \n
       "		_p set [2, 0];" \n
       "" \n
       "		// verify the position is free of obstacles to move there" \n
       "		_next =_p isFlatEmpty [" \n
       "			_sampleRange," \n
       "			2.0," \n
       "			0.87," \n
       "			_sampleRange," \n
       "			0," \n
       "			false," \n
       "			_unit" \n
       "		];" \n
       "" \n
       "		// abort search if position is fine" \n
       "		if ((count _next) > 0) exitWith {};" \n
       "" \n
       "		// adapt trialDir" \n
       "		_obj = nearestObject _p;" \n
       "		if (!(isNull _obj)) then" \n
       "		{" \n
       "			_c = [(position _unit), _p, _position] call _convexity;" \n
       "			if (_c > 0) then" \n
       "			{" \n
       "				_trialDir = -1;			" \n
       "			} else" \n
       "			{" \n
       "				_trialDir = 1;" \n
       "			};" \n
       "		};" \n
       "	};" \n
       "" \n
       "	// make sure our complete/distance check doesn't fail!" \n
       "	if ((count _next) > 0) then" \n
       "	{" \n
       "		_next set [2, 0];" \n
       "		[" \n
       "			[""position"", _next]," \n
       "			[""type"", ""mil_dot""]," \n
       "			[""size"", 0.76]" \n
       "		] call RUBE_mapDrawMarker;" \n
       "	};" \n
       "" \n
       "	_next" \n
       "};" \n
       "" \n
       "// void => void" \n
       "_adjustDirection = {" \n
       "	_dir = [_unit, _pos] call BIS_fnc_dirTo;" \n
       "	_unit setDir _dir;" \n
       "};" \n
       "" \n
       "" \n
       "// p0, p1, p2 => scalar, where" \n
       "//  _convexity < 0  == clockwise" \n
       "//  _convexity == 0 == collinear" \n
       "//  _convexity > 0  == counter-clockwise" \n
       "_convexity = {" \n
       "   ( " \n
       "      (((_this select 1) select 0) - ((_this select 0) select 0)) *" \n
       "      (((_this select 2) select 1) - ((_this select 0) select 1)) -" \n
       "      (((_this select 1) select 1) - ((_this select 0) select 1)) *" \n
       "      (((_this select 2) select 0) - ((_this select 0) select 0))" \n
       "   )" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="what_now_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "what_now_">*/
    class what_now_
    {
      name = "what_now_";
      init = /*%FSM<STATEINIT""">*/"_unit doWatch objNull;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="dead";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(alive _unit)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "arrived">*/
        class arrived
        {
          priority = 1.000000;
          to="complete";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"((_pos select 0) == (_position select 0)) && ((_pos select 1) == (_position select 1))"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "move">*/
        class move
        {
          priority = 0.000000;
          to="dirTo_next";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "dead">*/
    class dead
    {
      name = "dead";
      init = /*%FSM<STATEINIT""">*/"_unit switchMove """";"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "complete">*/
    class complete
    {
      name = "complete";
      init = /*%FSM<STATEINIT""">*/"_unit enableAI ""ANIM"";" \n
       "_unit switchMove ""AmovPercMstpSsurWnonDnon"";" \n
       "_unit disableAI ""ANIM"";"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "dirTo_next">*/
    class dirTo_next
    {
      name = "dirTo_next";
      init = /*%FSM<STATEINIT""">*/"if (!_isGoing) then" \n
       "{" \n
       "	_unit enableAI ""ANIM"";" \n
       "	_unit switchMove ""AmovPercMstpSsurWnonDnon"";" \n
       "	_unit disableAI ""ANIM"";" \n
       "};" \n
       "" \n
       "_pos = [] call _getNextPos;" \n
       "" \n
       "if ((count _pos) > 0) then" \n
       "{" \n
       "	_dir = [(position _unit), _pos] call BIS_fnc_dirTo;" \n
       "" \n
       "	// soft change direction" \n
       "	_unit doWatch _pos;" \n
       "};" \n
       "" \n
       "// update time" \n
       "_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="dead";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(alive _unit)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "stuck">*/
        class stuck
        {
          priority = 1.000000;
          to="regular_doMove";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(count _pos) == 0"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "good_dir_or_dela">*/
        class good_dir_or_dela
        {
          priority = 0.000000;
          to="moveTo_next";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"((time - _t) > _delay) || ([(direction _unit), (_dir - 2), (_dir + 2)] call RUBE_dirInArc)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "moving">*/
    class moving
    {
      name = "moving";
      init = /*%FSM<STATEINIT""">*/"// update time" \n
       "_t = time;" \n
       "" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="dead";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(alive _unit)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "complete">*/
        class complete
        {
          priority = 1.000000;
          to="what_now_";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_unit distance _pos) < _completeDistance"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "cooldown">*/
        class cooldown
        {
          priority = 0.000000;
          to="adjust_direction";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t) > _adjustDirCooldown"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "regular_doMove">*/
    class regular_doMove
    {
      name = "regular_doMove";
      init = /*%FSM<STATEINIT""">*/"_unit enableAI ""ANIM"";" \n
       "_unit moveTo _position;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="dead";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!(alive _unit)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "unitReady">*/
        class unitReady
        {
          priority = 0.000000;
          to="complete_1";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(moveToCompleted _unit) || (moveToFailed _unit)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "complete_1">*/
    class complete_1
    {
      name = "complete_1";
      init = /*%FSM<STATEINIT""">*/"_unit enableAI ""ANIM"";" \n
       "_unit switchMove ""AmovPercMstpSsurWnonDnon"";" \n
       "_unit disableAI ""ANIM"";"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "adjust_direction">*/
    class adjust_direction
    {
      name = "adjust_direction";
      init = /*%FSM<STATEINIT""">*/"[] call _adjustDirection;" \n
       "" \n
       "// randomize cooldown" \n
       "_adjustDirCooldown = 1.0 + (random 3.0);"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="moving";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "moveTo_next">*/
    class moveTo_next
    {
      name = "moveTo_next";
      init = /*%FSM<STATEINIT""">*/"_unit setDir _dir;" \n
       "" \n
       "if (!_isGoing) then" \n
       "{" \n
       "	_unit enableAI ""ANIM"";" \n
       "	_unit switchMove (_surrenderMoveToAnims call RUBE_randomSelect);" \n
       "	_unit disableAI ""ANIM"";" \n
       "};" \n
       "" \n
       "_isGoing = true;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="moving";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
  };
  initState="init";
  finalStates[] =
  {
    "dead",
    "complete",
    "complete_1",
  };
};
/*%FSM</COMPILE>*/