/*%FSM<COMPILE "C:\Programme\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, RUBE_AI_VEH_route">*/
/*%FSM<HEAD>*/
/*
item0[] = {"init",0,4346,108.169724,-15.440197,198.169647,34.559814,0.000000,"init"};
item1[] = {"_",4,218,141.719940,56.341454,166.180222,75.132103,0.000000,""};
item2[] = {"what_now___",2,250,107.963013,106.436127,197.963013,156.436096,0.000000,"what now..."};
item3[] = {"dead",4,218,228.702377,104.991089,318.702484,154.991089,2.000000,"dead"};
item4[] = {"dead__onFailure",1,250,347.495178,105.837334,437.495178,155.837311,0.000000,"dead" \n "(onFailure)"};
item5[] = {"onDamage",2,250,-198.402100,-75.925491,-108.402100,-25.925491,0.000000,"onDamage"};
item6[] = {"move_to_next",4,218,-29.891605,107.108780,60.108261,157.108948,0.000000,"move to" \n "next"};
item7[] = {"on_route___",2,250,-272.327271,105.982986,-182.327240,155.982986,0.000000,"on route..."};
item8[] = {"_",4,218,-318.361359,119.247742,-296.241730,139.598862,0.000000,""};
item9[] = {"delay_loop",2,250,-409.648712,118.467484,-342.275543,141.159302,0.000000,"delay loop"};
item10[] = {"delay",4,218,-406.527740,166.842010,-345.396454,198.896622,0.000000,"delay"};
item11[] = {"ready",4,218,-131.721344,186.273407,-41.721684,236.273651,2.000000,"ready"};
item12[] = {"contact",4,218,-272.327454,177.765274,-182.327484,227.765289,3.000000,"contact"};
item13[] = {"onContact",2,250,-272.327576,250.326950,-182.327545,300.326965,0.000000,"onContact"};
item14[] = {"exit_onContact",4,218,-272.328247,326.009277,-180.767776,377.569763,1.000000,"exit" \n "onContact"};
item15[] = {"danger",1,250,-271.548035,400.911621,-181.547943,450.911621,0.000000,"danger"};
item16[] = {"scriptDone",4,218,-381.118103,325.330750,-291.118256,375.330750,0.000000,"scriptDone"};
item17[] = {"outOfFuel",4,218,-327.893311,-7.272099,-237.893311,42.727898,1.000000,"outOfFuel"};
item18[] = {"onArrival",2,250,-12.382900,186.222641,77.617172,236.222610,0.000000,"onArrival"};
item19[] = {"scriptDone",4,218,107.223686,184.450592,197.223724,234.450684,0.000000,"scriptDone"};
item20[] = {"dead",4,218,-161.980560,246.905090,-71.980629,296.905151,2.000000,"dead"};
item21[] = {"",7,210,388.773773,266.253265,396.773773,274.253265,0.000000,""};
item22[] = {"damaged",1,250,-199.403946,-243.272690,-109.403976,-193.272659,0.000000,"damaged"};
item23[] = {"update_cooldown",4,218,-392.290680,43.489830,-302.290527,93.489830,2.000000,"update" \n "cooldown"};
item24[] = {"update_status",2,250,-539.956787,44.461315,-449.956879,94.461311,0.000000,"update" \n "status"};
item25[] = {"_",4,218,-507.897766,119.265938,-482.987518,140.121399,0.000000,""};
item26[] = {"damaged",4,218,-198.119110,26.198555,-108.119171,76.198563,1.000000,"damaged"};
item27[] = {"back_to_regular",2,250,-382.575287,250.417053,-292.575287,300.417053,0.000000,"back to" \n "regular route"};
item28[] = {"_",4,218,-349.544708,208.642990,-325.605927,230.469818,0.000000,""};
item29[] = {"exit_onDamaged",4,218,-198.402222,-161.416489,-108.402184,-111.416489,1.000000,"exit" \n "onDamaged"};
item30[] = {"onOutOfFuel",2,250,-415.605774,-101.262451,-325.605774,-51.262451,0.000000,"onOutOfFuel"};
item31[] = {"exit_onOutOfFuel",4,218,-414.634308,-183.838959,-324.634308,-133.838959,1.000000,"exit onOutOfFuel"};
item32[] = {"out_of_fuel",1,250,-415.605804,-273.215820,-325.605804,-223.215927,0.000000,"out of fuel"};
item33[] = {"",7,210,-493.476257,-384.383972,-485.476196,-376.383972,0.000000,""};
item34[] = {"",7,210,-29.764124,-384.384003,-21.764124,-376.384003,0.000000,""};
item35[] = {"no_vehicles",4,218,179.117630,-84.191666,269.117798,-34.191643,1.000000,"no vehicles"};
item36[] = {"exit",1,250,347.097961,-85.337921,437.097626,-35.337921,0.000000,"exit"};
item37[] = {"scriptDone",4,218,-535.259155,-102.465851,-445.258911,-52.465836,0.000000,"scriptDone"};
item38[] = {"scriptDone",4,218,-70.812225,-76.640892,19.187759,-26.640934,0.000000,"scriptDone"};
item39[] = {"ready_to_go",2,250,-273.768005,-404.367371,-183.768173,-354.367371,0.000000,"ready to go"};
item40[] = {"continue",4,218,-272.796509,-326.648438,-182.796692,-276.648224,0.000000,"continue"};
item41[] = {"quitFSM",4,218,-55.940277,25.723480,35.046783,76.710541,4.000000,"quitFSM"};
item42[] = {"",7,210,161.123520,-129.765274,169.123505,-121.765266,0.000000,""};
item43[] = {"route_complete",4,218,227.822586,31.109646,317.822662,81.109650,5.000000,"route complete"};
item44[] = {"done__onSuccess",1,250,351.208557,32.096703,441.208588,82.096634,0.000000,"done" \n "(onSuccess)"};
item45[] = {"",7,210,387.032776,-129.804718,395.032776,-121.804718,0.000000,""};
link0[] = {0,1};
link1[] = {0,35};
link2[] = {1,2};
link3[] = {2,3};
link4[] = {2,6};
link5[] = {2,41};
link6[] = {2,43};
link7[] = {3,4};
link8[] = {5,29};
link9[] = {5,38};
link10[] = {6,7};
link11[] = {7,8};
link12[] = {7,11};
link13[] = {7,12};
link14[] = {7,17};
link15[] = {7,20};
link16[] = {7,23};
link17[] = {7,26};
link18[] = {7,41};
link19[] = {8,9};
link20[] = {9,10};
link21[] = {10,7};
link22[] = {11,18};
link23[] = {12,13};
link24[] = {13,14};
link25[] = {13,16};
link26[] = {14,15};
link27[] = {16,27};
link28[] = {17,30};
link29[] = {18,19};
link30[] = {19,2};
link31[] = {20,21};
link32[] = {21,4};
link33[] = {23,24};
link34[] = {24,25};
link35[] = {25,9};
link36[] = {26,5};
link37[] = {27,28};
link38[] = {28,7};
link39[] = {29,22};
link40[] = {30,31};
link41[] = {30,37};
link42[] = {31,32};
link43[] = {33,39};
link44[] = {34,39};
link45[] = {35,36};
link46[] = {37,33};
link47[] = {38,34};
link48[] = {39,40};
link49[] = {40,7};
link50[] = {41,42};
link51[] = {42,45};
link52[] = {43,44};
link53[] = {45,36};
globals[] = {0.000000,0,0,0,0,640,480,1,64,6316128,1,-154.626587,531.519165,458.802673,-197.470078,735,703,1};
window[] = {0,-1,-1,-1,-1,966,1572,2971,132,1,752};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "RUBE_AI_VEH_route";
  class States
  {
    /*%FSM<STATE "init">*/
    class init
    {
      name = "init";
      init = /*%FSM<STATEINIT""">*/"/*" \n
       "	Description:" \n
       "	 vehicle (group) route fsm for cargo and" \n
       "	 patrols and convoys and the like. (default settings are for cargo)" \n
       "" \n
       "*/" \n
       "" \n
       "private [" \n
       "	""_quitFSM""," \n
       "	""_group"", ""_vehicleData"", ""_vehicles"", ""_route"", ""_mode"", ""_repeat"", ""_speed""," \n
       "	""_onArrival"", ""_onContact"", ""_onDamaged"", ""_onOutOfFuel"", ""_onFailure"", ""_onSuccess""," \n
       "	""_exitOnContact"", ""_exitOnDamaged"", ""_exitOnOutOfFuel""" \n
       "];" \n
       "" \n
       "// to be setVariabled from the outside if needed." \n
       "_quitFSM = false;" \n
       "" \n
       "_group = grpNull;" \n
       "_vehicleData = [];" \n
       "_vehicles = [];" \n
       "_route = [];" \n
       "" \n
       "// 0: seq., " \n
       "// 1: random without, " \n
       "// 2: random with put back" \n
       "_mode = 0;" \n
       "_repeat = true;" \n
       "" \n
       "_speed = [""NORMAL""]; // may correlate/alternate with given route/destinations" \n
       "_formation = [""COLUMN""]; // may correlate/alternate with given route/destinations" \n
       "_behaviour = [""SAFE""]; // may correlate/alternate with given route/destinations" \n
       "_combatMode = [""BLUE""]; // may correlate/alternate with given route/destinations" \n
       "" \n
       "// all spawned, while the fsm waits..." \n
       "// code get's passed [_group, _vehicles] as _this except for" \n
       "// _onContact, which gets passed [_group, _vehicles, _currentTargets]" \n
       "_onArrival = []; // set which may correlate/alternate with given route/destinations" \n
       "_onContact = """";" \n
       "_onDamaged = """";" \n
       "_onOutOfFuel = """";" \n
       "_onFailure = """";" \n
       "_onSuccess = """"; // might fire ""too early"", that is, you might like to wait until all vehicles have speed == 0" \n
       "" \n
       "_exitOnContact = false;" \n
       "_exitOnDamaged = false; // default behaviour is to simply abandon dmg. vehicles" \n
       "_exitOnOutOfFuel = false;" \n
       "" \n
       "" \n
       "/*" \n
       "	read parameters" \n
       "*/" \n
       "{" \n
       "	switch (_x select 0) do" \n
       "	{" \n
       "		case ""group"": { _group = _x select 1; };" \n
       "		case ""route"": { _route = _x select 1; };" \n
       "		case ""mode"": { _mode = _x select 1; };" \n
       "		case ""repeat"": { _repeat = _x select 1; };" \n
       "		case ""speed"": " \n
       "		{ " \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_speed = _x select 1;" \n
       "			} else" \n
       "			{" \n
       "				_speed = [(_x select 1)];" \n
       "			};" \n
       "		};" \n
       "		case ""formation"": " \n
       "		{ " \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_formation = _x select 1;" \n
       "			} else" \n
       "			{" \n
       "				_formation = [(_x select 1)];" \n
       "			};" \n
       "		};" \n
       "		case ""behaviour"": " \n
       "		{ " \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_behaviour = _x select 1;" \n
       "			} else" \n
       "			{" \n
       "				_behaviour = [(_x select 1)];" \n
       "			};" \n
       "		};" \n
       "		case ""combatMode"": " \n
       "		{ " \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_combatMode = _x select 1;" \n
       "			} else" \n
       "			{" \n
       "				_combatMode = [(_x select 1)];" \n
       "			};" \n
       "		};" \n
       "		case ""onArrival"": " \n
       "		{ " \n
       "			if ((typeName (_x select 1)) == ""ARRAY"") then" \n
       "			{" \n
       "				_onArrival = _x select 1;" \n
       "			} else" \n
       "			{" \n
       "				_onArrival = [(_x select 1)];" \n
       "			};" \n
       "		};" \n
       "		case ""onContact"": { _onContact = _x select 1; };" \n
       "		case ""onDamaged"": { _onDamaged = _x select 1; };" \n
       "		case ""onOutOfFuel"": { _onOutOfFuel = _x select 1; };" \n
       "		case ""onFailure"": { _onFailure = _x select 1; };" \n
       "		case ""onSuccess"": { _onSuccess = _x select 1; };" \n
       "		case ""exitOnContact"": { _exitOnContact = _x select 1; };" \n
       "		case ""exitOnDamaged"": { _exitOnDamaged = _x select 1; };" \n
       "		case ""exitOnOutOfFuel"": { _exitOnOutOfFuel = _x select 1; };" \n
       "	};" \n
       "} forEach _this;" \n
       "" \n
       "" \n
       "// make sure the route consits of positions only," \n
       "// (transforming objects, or locations...)" \n
       "_route = [" \n
       "	_route," \n
       "	{" \n
       "		private [""_pos""];" \n
       "		if ((typeName _this) != ""ARRAY"") exitWith" \n
       "		{" \n
       "			_pos = (position _this);" \n
       "			_pos set [2, 0];" \n
       "			_pos" \n
       "		};" \n
       "" \n
       "		[" \n
       "			(_this select 0)," \n
       "			(_this select 1)," \n
       "			0" \n
       "		]" \n
       "	}" \n
       "] call RUBE_arrayMap;" \n
       "" \n
       "" \n
       "// get group vehicles" \n
       "if (!(isNull _group)) then" \n
       "{" \n
       "	// 0: vehicles, 1: assignments (unit, veh, role)" \n
       "	_vehicleData = _group call RUBE_getGroupVehicles;" \n
       "	_vehicles = _vehicleData select 0;" \n
       "};" \n
       "" \n
       "" \n
       "" \n
       "// init" \n
       "private [" \n
       "	""_t"", ""_delay"", ""_codeHandle"", ""_damaged""," \n
       "	""_currentTargets"", ""_currentDestination""," \n
       "	""_index"", ""_destinations"", ""_outOfFuel""" \n
       "];" \n
       "" \n
       "_t = time;" \n
       "_delay = 2 + (random 1);" \n
       "" \n
       "_destinations = []; // working ""copy"" (indices only)" \n
       "_currentDestination = 0;" \n
       "_codeHandle =  0 spawn {};" \n
       "_damaged = false;" \n
       "_outOfFuel = false;" \n
       "_currentTargets = [];" \n
       "" \n
       "_updateCoolDown = time;" \n
       "_updateCoolDownTime = 9 + (random 1.0);" \n
       "" \n
       "_contactCoolDown = time;" \n
       "_contactCoolDownTime = 120 + (random 60);" \n
       "" \n
       "" \n
       "// private functions" \n
       "private[" \n
       "	""_leadVehicleReady""," \n
       "	""_isDead""," \n
       "	""_fillDestinationPool""," \n
       "	""_nextDestination""," \n
       "	""_proceedWithRoute""" \n
       "];" \n
       "" \n
       "// void -> boolean" \n
       "// (we can't simply check if the driver is ready!)" \n
       "_leadVehicleReady = {" \n
       "	private [""_veh"", ""_ready""];" \n
       "	_veh = vehicle (leader _group);" \n
       "	_ready = true;" \n
       "   " \n
       "	{" \n
       "		if (!(isNull _x)) then" \n
       "		{" \n
       "			_ready = _ready && (unitReady _x);" \n
       "		};" \n
       "	} forEach [" \n
       "		(commander _veh)," \n
       "		(gunner _veh)," \n
       "		(driver _veh)" \n
       "	];" \n
       "" \n
       "	_ready" \n
       "};" \n
       "" \n
       "" \n
       "" \n
       "// more restrictive version of aliveGroup" \n
       "_isDead = {" \n
       "	private [""_dead""];" \n
       "	_dead = false;" \n
       "" \n
       "	if (!(_group call RUBE_aliveGroup)) exitWith" \n
       "	{" \n
       "		true" \n
       "	};" \n
       "" \n
       "	// probably no good idea..." \n
       "	/*" \n
       "	// check drivers" \n
       "	{" \n
       "		if (!(alive (driver _x))) exitWith" \n
       "		{" \n
       "			_dead = true;" \n
       "		};" \n
       "	} forEach _vehicles;" \n
       "	*/" \n
       "" \n
       "	_dead" \n
       "};" \n
       "" \n
       "" \n
       "// fills the destination pool" \n
       "_fillDestinationPool = {" \n
       "	private [""_i""];" \n
       "	for ""_i"" from 0 to ((count _route) - 1) do" \n
       "	{" \n
       "		_destinations set [_i, _i];" \n
       "	};" \n
       "};" \n
       "" \n
       "// returns next destination index according to" \n
       "// the current mode" \n
       "_nextDestination = {" \n
       "	private [""_index""];" \n
       "	_index = _currentDestination;" \n
       "" \n
       "	// fill dest. pool" \n
       "	if (_repeat && ((count _destinations) == 0)) then" \n
       "	{" \n
       "		[] call _fillDestinationPool;" \n
       "	};" \n
       "" \n
       "	// route finished?" \n
       "	if ((count _destinations) == 0) exitWith { -1 };" \n
       "	if ((_currentDestination + 1) == (count _route))  exitWith { -1 };" \n
       "" \n
       "	switch (_mode) do" \n
       "	{" \n
       "		// random with put back" \n
       "		case 2:" \n
       "		{" \n
       "			_index = (_destinations - [_currentDestination]) call RUBE_randomSelect;" \n
       "		};" \n
       "		//random without put back" \n
       "		case 1:" \n
       "		{" \n
       "			_index = _destinations call RUBE_randomPop;" \n
       "		};" \n
       "		// seq., one after the other" \n
       "		default" \n
       "		{" \n
       "			_index = (_currentDestination + 1) % (count _route);" \n
       "		};" \n
       "	};" \n
       "" \n
       "	_index" \n
       "};" \n
       "" \n
       "" \n
       "// updates the waypoint with the current job" \n
       "_proceedWithRoute = {" \n
       "	if (_currentDestination < 0) exitWith {};" \n
       "" \n
       "	[" \n
       "		[""group"", _group]," \n
       "		[""type"", ""MOVE""]," \n
       "		[""position"", (_route select _currentDestination)]," \n
       "		[""completionRadius"", 10]," \n
       "		[""formation"",  (_formation select (_currentDestination % (count _formation)))]," \n
       "		[""behaviour"",  (_behaviour select (_currentDestination %  (count _behaviour)))]," \n
       "		[""combatMode"",  (_combatMode select (_currentDestination %  (count _combatMode)))]," \n
       "		[""speed"", (_speed select (_currentDestination %  (count _speed)))]" \n
       "	] call RUBE_updateWaypoint;" \n
       "};" \n
       "" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "no_vehicles">*/
        class no_vehicles
        {
          priority = 1.000000;
          to="exit";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(count _vehicles) < 1"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="what_now___";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"[] call _fillDestinationPool;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "what_now___">*/
    class what_now___
    {
      name = "what_now___";
      init = /*%FSM<STATEINIT""">*/"if (!_quitFSM) then" \n
       "{" \n
       "	_currentDestination = [] call _nextDestination;" \n
       "	[] call _proceedWithRoute;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "route_complete">*/
        class route_complete
        {
          priority = 5.000000;
          to="done__onSuccess";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(_currentDestination < 0)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "quitFSM">*/
        class quitFSM
        {
          priority = 4.000000;
          to="exit";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_quitFSM"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="dead__onFailure";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"([] call _isDead)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "move_to_next">*/
        class move_to_next
        {
          priority = 0.000000;
          to="on_route___";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "dead__onFailure">*/
    class dead__onFailure
    {
      name = "dead__onFailure";
      init = /*%FSM<STATEINIT""">*/"// run onFailure" \n
       "if ((typeName _onFailure) == ""CODE"") then" \n
       "{" \n
       "	_codeHandle = [_group, _vehicles] spawn _onFailure;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "onDamage">*/
    class onDamage
    {
      name = "onDamage";
      init = /*%FSM<STATEINIT""">*/"// run onDamaged" \n
       "if ((typeName _onDamaged) == ""CODE"") then" \n
       "{" \n
       "	_codeHandle = [_group, _vehicles] spawn _onDamaged;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "exit_onDamaged">*/
        class exit_onDamaged
        {
          priority = 1.000000;
          to="damaged";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_exitOnDamaged"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "scriptDone">*/
        class scriptDone
        {
          priority = 0.000000;
          to="ready_to_go";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"scriptDone _codeHandle"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_damaged = false;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "on_route___">*/
    class on_route___
    {
      name = "on_route___";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "quitFSM">*/
        class quitFSM
        {
          priority = 4.000000;
          to="exit";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_quitFSM"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "contact">*/
        class contact
        {
          priority = 3.000000;
          to="onContact";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"((count _currentTargets) > 0) && ((time - _contactCoolDown) > _contactCoolDownTime)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "update_cooldown">*/
        class update_cooldown
        {
          priority = 2.000000;
          to="update_status";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _updateCoolDown) > _updateCoolDownTime"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "dead">*/
        class dead
        {
          priority = 2.000000;
          to="dead__onFailure";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"([] call _isDead)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "ready">*/
        class ready
        {
          priority = 2.000000;
          to="onArrival";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"([] call _leadVehicleReady)"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "damaged">*/
        class damaged
        {
          priority = 1.000000;
          to="onDamage";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_damaged"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "outOfFuel">*/
        class outOfFuel
        {
          priority = 1.000000;
          to="onOutOfFuel";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_outOfFuel"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="delay_loop";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "delay_loop">*/
    class delay_loop
    {
      name = "delay_loop";
      init = /*%FSM<STATEINIT""">*/"_t = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "delay">*/
        class delay
        {
          priority = 0.000000;
          to="on_route___";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _t) > _delay"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "onContact">*/
    class onContact
    {
      name = "onContact";
      init = /*%FSM<STATEINIT""">*/"// run onContact" \n
       "if ((typeName _onContact) == ""CODE"") then" \n
       "{" \n
       "	_codeHandle = [_group, _vehicles, _currentTargets] spawn _onContact;" \n
       "};" \n
       "" \n
       "_contactCoolDown = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "exit_onContact">*/
        class exit_onContact
        {
          priority = 1.000000;
          to="danger";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_exitOnContact"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "scriptDone">*/
        class scriptDone
        {
          priority = 0.000000;
          to="back_to_regular";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"scriptDone _codeHandle"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "danger">*/
    class danger
    {
      name = "danger";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "onArrival">*/
    class onArrival
    {
      name = "onArrival";
      init = /*%FSM<STATEINIT""">*/"// run onArrival" \n
       "if ((count _onArrival) > 0) then" \n
       "{" \n
       "	_index = _currentDestination % (count _onArrival);" \n
       "" \n
       "	if ((typeName (_onArrival select _index)) == ""CODE"") then" \n
       "	{" \n
       "		_codeHandle = _group spawn (_onArrival select _index);" \n
       "	};" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "scriptDone">*/
        class scriptDone
        {
          priority = 0.000000;
          to="what_now___";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"scriptDone _codeHandle"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "damaged">*/
    class damaged
    {
      name = "damaged";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "update_status">*/
    class update_status
    {
      name = "update_status";
      init = /*%FSM<STATEINIT""">*/"_updateCoolDown = time;" \n
       "" \n
       "// updates currentTargets" \n
       "_currentTargets = _group call RUBE_getEnemyContact;" \n
       "" \n
       "// damaged?" \n
       "if (({!(canMove _x)} count _vehicles) > 0) then" \n
       "{" \n
       "	_damaged = true;" \n
       "};" \n
       "" \n
       "// out of fuel?" \n
       "if (({((fuel _x) < 0.01)} count _vehicles) > 0) then" \n
       "{" \n
       "	_outOfFuel = true;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="delay_loop";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "back_to_regular">*/
    class back_to_regular
    {
      name = "back_to_regular";
      init = /*%FSM<STATEINIT""">*/"[] call _proceedWithRoute;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="on_route___";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "onOutOfFuel">*/
    class onOutOfFuel
    {
      name = "onOutOfFuel";
      init = /*%FSM<STATEINIT""">*/"// run onOutOfFuel" \n
       "if ((typeName _onOutOfFuel) == ""CODE"") then" \n
       "{" \n
       "	_codeHandle = [_group, _vehicles] spawn _onOutOfFuel;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "exit_onOutOfFuel">*/
        class exit_onOutOfFuel
        {
          priority = 1.000000;
          to="out_of_fuel";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_exitOnOutOfFuel"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "scriptDone">*/
        class scriptDone
        {
          priority = 0.000000;
          to="ready_to_go";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"scriptDone _codeHandle"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/"_outOfFuel = false;"/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "out_of_fuel">*/
    class out_of_fuel
    {
      name = "out_of_fuel";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "exit">*/
    class exit
    {
      name = "exit";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "ready_to_go">*/
    class ready_to_go
    {
      name = "ready_to_go";
      init = /*%FSM<STATEINIT""">*/"// re-retrieve vehicle data in case some vehicle has been abandoned!" \n
       "// and abandon vehicles that would trigger onDamaged/ourOfFuel again right away.." \n
       "_vehicleData = _group call RUBE_getGroupVehicles;" \n
       "_vehicles = [" \n
       "	(_vehicleData select 0)," \n
       "	{" \n
       "		if (!(canMove _this)) exitWith { false };" \n
       "		if ((fuel _x) < 0.001) exitWith { false };" \n
       "		true" \n
       "	}" \n
       "] call RUBE_arrayFilter;" \n
       "" \n
       "[] call _proceedWithRoute;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "continue">*/
        class continue
        {
          priority = 0.000000;
          to="on_route___";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "done__onSuccess">*/
    class done__onSuccess
    {
      name = "done__onSuccess";
      init = /*%FSM<STATEINIT""">*/"// run onSuccess" \n
       "if ((typeName _onSuccess) == ""CODE"") then" \n
       "{" \n
       "	_codeHandle = [_group, _vehicles] spawn _onSuccess;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
  };
  initState="init";
  finalStates[] =
  {
    "dead__onFailure",
    "danger",
    "damaged",
    "out_of_fuel",
    "exit",
    "done__onSuccess",
  };
};
/*%FSM</COMPILE>*/